Name  : YoonSeong(Michael) Seo
ID    : 120299219
Email : ysseo@myseneca.ca
Date  : April 5, 2022
Milestone Reflection

	The final project was divided into 3 parts, consisting of most of the materials we have learned in OOP345
throughout the semester, including class inheritance, reading from a file with different delimiters and methods,
coping with dynamic memory allocations, array of pointers, and utilizing vectors and algorithms.
In terms of difficulty, milestone 3 was much more involved than milestones 1 and 2. Milestone 3 was designed to
use various STL containers such as deque and vector, along with the use of algorithms, to manipulate customer orders
and workstations to properly fill items needed in the orders at each station. The walkthrough recordings that our
professor provided for us were very detailed and informative to follow along the process of completing each milestone,
and they really helped in achieving a complete working solution. One note worth mentioning about milestone 3 is that
because of the use of vectors and deques, such as g_completed, g_incomplete, g_pending, m_orders and m_activeLine 
variables, I was able to manipulate them without having to dynamically allocate/deallocate memory whenever an element
was pushed into or popped out of them. It would have involved much more steps and procedures if they were arrays of 
pointers instead. I found previous workshops also very useful to reference, as many of implementations required in
milestones were already touched upon, array of pointers for example in CustomerOrder module. I remembered that similar
implementations were developed in workshop 4 and I was able to imply the logics to manage the double layer of memory
allocation/deallocation. I feel that the milestone project as a whole was a kind of a review of what the course
offers to prepare for the final exam.
One difficulty I faced was in milestone 3, where my code compiled correctly but my output for filling orders was
different from the sample output. I spent many hours trying to debug in Workstation and LineManager modules, but
I found out later that the problem was actually in fillItem member function of CustomerOrder class.
In this particular function, as shown below
...
for (auto i = 0u; !itemFilled && i < m_cntItem; i++)
{
	if (m_lstItem[i]->m_itemName == station.getItemName())
	{
		if (station.getQuantity())
...
In the first if statement, I initially omitted the case when the item has already been filled, thus resulting in
filling again the item that has m_isFilled data member as true. This did not cause any output mismatch and passed the
milestone2 submission test, getting me to believe that milestone 1 and 2 were error-free.
The modification to that specific if statement is as follows:
if (m_lstItem[i]->m_itemName == station.getItemName() && (!m_lstItem[i]->m_isFilled))
which simply checks if m_isFilled of an item is false, implying that the item needs to be filled, and skips the
filling procedure if it is set to true.
OOP345 milestones were definitely the most involved and difficult project I have faced, but with detailed walkthroughs
that our professor provided I was able to complete them on timely manner and with less difficulty.